Find more about Bomberjam at https://github.com/asimmon/bomberjam-contest
# Bomberjam Python Starter kit  
This starter kit is meant to be a good project structure that can be used as is. It provides everything you need to get started, including complete game state modeling, logging, an abstracted game loop and various utility scripts.  
You can, however, use it as an inspiration and set up your own project if you prefer.   

## Project Structure
The project structure looks like this:
```
bomberjam/  
├── scripts/  
│   └── publish.bat
├── starter/  
|   ├── bot_logic/  
|   |   └── bot.py <-- Code your logic here
|   ├── core/  
|   ├── models/  
|   ├── scripts/  
|   |   ├── bomberjam.exe <-- You need to copy paste this one yourself based on your OS
|   │   └── run_game.bat
|   ├── MyBot.py  
|   ├── README
|   └── requirements.txt  
└── README
```
The `starter` folder is your bot folder.  
If you use the starter kit as is, you will most likely only work inside `bot_logic/`  
When you'll want to publish your bot, you will have to zip the `starter` folder.  
Because of the way publishing works, if you want to develop multiple bots, make them play locally against each other and still be able to publish them individually, it will be easier if you have one folder per bot.  

## Running your bot locally
In the `starter/` folder, you will find a `scripts/` folder. In there, make sure to copy the right `bomberjam.exe` based on your OS.  
Then, you will be able to use `run_game.bat` **from the root of your bot folder**.  
It will run a game where each player is your bot.  

Example usage:
```
bomberjam\starter> scripts\run_game.bat
```

## Publishing your bot
At the root level, you will find a script folder with `publish.bat`  
This script takes the folder name of the bot you want to publish and will produce a copy of the folder, named `published/`, without the unnecessary folders like `scripts/`, `logs/` and `venv/` (more on that later)  
All you have to do then is zip the folder and upload it to Bomberjam

Example usage:
```
bomberjam> scripts\publish.bat starter
```

## Suggested PyCharm setup
If you are using PyCharm, it is recommended that you open the `starter/` folder as your project.  
This will ensure that the packages structure when you develop is the same as when your code is published.  
You should then set up a virutalenv inside the folder and run `pip install`  
Finally, you can set up a Run configuration that uses `scripts\run_game.bat`  

### Setting up a virtualenv
### Setting up a Run configuration